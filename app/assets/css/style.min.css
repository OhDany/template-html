/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2019. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 14px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}.container{max-width:1100px;margin:0 auto}span.section{color:#ff9800}span.author,span.date,span.section{font-family:Arial,Helvetica,sans-serif;font-size:.9em}span.author{color:#ff9800}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2.2em;margin:0;line-height:1.3}h1,mark{color:#000}mark{background-color:#ff0}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{background:#fff}.header .nav-primary{padding:.3em 0;border-bottom:2px solid #ddd;border-top:1px solid #ddd}.header .nav-primary .navigation{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.header .nav-primary .navigation .logo{-ms-flex:1 0 10%;flex:1 0 10%}.header .nav-primary .navigation .logo img{width:350px;border-right:1px solid #ddd;padding-right:1rem}.header .nav-primary .navigation ul{-ms-flex:1 0 10%;flex:1 0 10%;margin:0}.header .nav-primary .navigation ul li{list-style:none;line-height:1.2}.header .nav-primary .navigation ul li a{color:#000;font-weight:700;text-transform:uppercase;font-size:9px;text-decoration:none}.header .nav-primary .navigation .date{-ms-flex:1 0 10%;flex:1 0 10%;color:#000;font-weight:700;text-transform:uppercase;font-size:10px}.nav{border-bottom:2px solid #ddd;background:#0678be}.nav ul{padding:7px 0;display:-ms-flexbox;display:flex;margin:0;list-style:none}.nav ul li{border-right:1px solid #ddd;padding:0 20px}.nav ul li a{font-size:13px;color:#fff;text-decoration:none;text-transform:uppercase;font-weight:500}.main{font-family:Georgia,Times New Roman,Times,serif}.main .nav-news{display:-ms-flexbox;display:flex;padding:7px;margin-top:1em;background:#ff9800}.main .nav-news .is-news p{margin:0;font-family:Arial,Helvetica,sans-serif;color:#fff;font-weight:900}.main .nav-news ul{display:-ms-flexbox;display:flex;margin:0}.main .nav-news ul li{margin-right:20px;list-style:none}.main .nav-news ul li a{font-size:14px;color:#fff;text-decoration:none;font-weight:500}.main .primary{display:-ms-flexbox;display:flex;margin:1em 0}.main .primary .p-one{-ms-flex:1 0 38%;flex:1 0 38%;margin:10px 10px 10px 0}.main .primary .p-one h1{font-size:3em;line-height:1.2}.main .primary .p-two{-ms-flex:1 0 38%;flex:1 0 38%;margin:10px}.main .primary .p-two img{width:420px}.main .primary .p-three{margin:10px;-ms-flex:1 0 20%;flex:1 0 20%}.main .primary .p-three .note{margin-bottom:1em;border-bottom:1px dotted #000}.main .primary .p-three .note h3{margin-top:.3em}.main .secondary{display:-ms-flexbox;display:flex}.main .secondary h3{font-size:1.5em;margin:0;color:#000;border-bottom:1px solid #ddd;font-style:italic;margin-bottom:1em}.main .secondary .p-one{-ms-flex:1 0 50%;flex:1 0 50%;margin:0 20px 0 0}.main .secondary .p-one .news{display:-ms-flexbox;display:flex}.main .secondary .p-one .news .news-img{-ms-flex:1 0 20%;flex:1 0 20%;margin-right:10px}.main .secondary .p-one .news .news-img img{width:150px}.main .secondary .p-one .news .news-content{margin:0 0 30px 10px}.main .secondary .p-one .news .news-content h2{font-size:1.3em;font-weight:500;color:#000;margin:0;line-height:1.3}.main .secondary .p-two{-ms-flex:1 0 15%;flex:1 0 15%;margin:0 10px}.main .secondary .p-two .tending{margin-bottom:1em;padding-bottom:1em;border-bottom:1px dotted #000}.main .secondary .p-two .tending span.section{font-size:12px;color:#0678be}.main .secondary .p-two .tending h5{line-height:1.4;font-size:12px;color:#000;margin:0}.main .secondary .p-three{-ms-flex:1 0 25%;flex:1 0 25%;margin:0 0 0 10px;text-align:center}.main .secondary .p-three .pub{margin-bottom:30px}.main .secondary .p-three .pub img{width:260px}.main .third{margin:1em 0}.main .third h2{display:inline-block;color:#000;font-size:2em;margin:0 0 .3em;border-top:.3em solid #000}.main .third .section-four{display:-ms-flexbox;display:flex}.main .third .section-four .p-one{-ms-flex:1 0 15%;flex:1 0 15%;margin-right:20px}.main .third .section-four .p-one .news .news-img img{width:250px}.main .third .section-four .news-content h3{font-weight:400;line-height:1.3;margin:0;color:#000}.main .third .section-four .news-content h5{color:#000}.main .sections{display:-ms-flexbox;display:flex}.main .sections .sectionss{-ms-flex:1 0 80%;flex:1 0 80%;margin-right:10px}.main .sections .sectionss .videos{background:#0678be;padding:1em;margin:2em 0}.main .sections .sectionss .videos h2{color:#fff;border-top:.3em solid #fff}.main .sections .sectionss h2{display:inline-block;color:#000;font-size:2em;margin:0 0 .3em;border-top:.3em solid #000}.main .sections .sectionss .p-one{display:-ms-flexbox;display:flex}.main .sections .sectionss .p-one h3{font-weight:400;font-size:1.9em;color:#000;margin:0;line-height:1.3}.main .sections .sectionss .p-one .n-news{-ms-flex:1 0 38%;flex:1 0 38%;margin:0 10px}.main .sections .sectionss .p-one .n-image{-ms-flex:1 0 38%;flex:1 0 38%;margin-right:10px}.main .sections .sectionss .p-one .n-image img{width:380px}.main .sections .sectionss .p-one .o-news{-ms-flex:1 0 15%;flex:1 0 15%;margin:0 10px}.main .sections .sectionss .p-one .o-news h5{color:#000}.main .sections .entretenmient{-ms-flex:1 0 10%;flex:1 0 10%;margin:0 20px}.main .sections .entretenmient h4{display:inline-block;color:#000;font-size:1.1em;margin:0 0 .3em;border-top:.4em solid #000}.main .sections .entretenmient .e-news{margin-bottom:.5em;padding-bottom:.5em;border-bottom:1px dotted #000}.main .sections .entretenmient h3{font-family:Impact,Haettenschweiler,Arial Narrow Bold,sans-serif;color:#000;line-height:1.3;margin:0}.main .sections .entretenmient h5{margin:0;color:#0678be}.main .sections .entretenmient p{font-family:Franklin Gothic Medium,Arial Narrow,Arial,sans-serif;margin:10px 0 0;line-height:1.3}.main .sections .entretenmient .e-img{margin:.3em 0}.main .sections .entretenmient .e-img img{width:170px}.booton{-ms-flex-negative:7;flex-shrink:7}button.orange{margin-right:10px;background-color:#ff9800;color:#fff}button.black,button.orange{font-weight:700;border:2px solid #ff9800;padding:1rem;border-radius:5px}button.black{color:#ff9800}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
