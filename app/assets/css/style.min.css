/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2019. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 14px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}.container{max-width:1024px;margin:0 auto}span.section{color:#ff9800}span.author,span.date,span.section{font-family:Arial,Helvetica,sans-serif;font-size:.9em}span.author{color:#ff9800}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2.2em;margin:0;line-height:1.3}h1,mark{color:#000}mark{background-color:#ff0}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{width:100%;background:#fff;position:fixed}.header .nav-primary{padding:.3em 0;border-bottom:2px solid #ddd;border-top:1px solid #ddd}.header .nav-primary .navigation{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding-right:1em}.header .nav-primary .navigation .logo{-ms-flex:1 0 26%;flex:1 0 26%}.header .nav-primary .navigation .logo img{width:350px;border-right:1px solid #ddd;padding-right:1rem}.header .nav-primary .navigation ul{-ms-flex:1 0 10%;flex:1 0 10%;margin:0;padding-left:1em}.header .nav-primary .navigation ul li{list-style:none;line-height:1.3;font-family:Roboto,sans-serif}.header .nav-primary .navigation ul li a{color:#000;font-weight:900;text-transform:uppercase;font-size:9px;text-decoration:none}.header .nav-primary .navigation ul li a:hover{text-decoration:underline}.header .nav-primary .navigation .date{-ms-flex:1 0 20%;flex:1 0 20%;color:#999;font-family:Roboto,sans-serif;font-weight:400;font-size:12px}@media only screen and (max-width:768px){.header .nav-primary .navigation .date{display:none}}@media only screen and (max-width:480px){.header .nav-primary .navigation .logo{-ms-flex:1 0 26%;flex:1 0 26%}.header .nav-primary .navigation .logo img{width:370px;border-right:none}.header .nav-primary .navigation .date,.header .nav-primary .navigation .subscribe,.header .nav-primary .navigation ul{display:none}}nav.navigation{background:#008fea}nav.navigation .nav-bar{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding-right:1em}nav.navigation .nav-bar ul.menu{display:-ms-flexbox;display:flex;margin:0;padding:0}nav.navigation .nav-bar ul.menu li{list-style:none;padding:.6em;font-family:Roboto,sans-serif;font-weight:400;font-size:1.1em}nav.navigation .nav-bar ul.menu li span{height:4px;width:30px;margin-bottom:5px;background:#fff;display:block}nav.navigation .nav-bar ul.menu li:hover{background:rgba(0,0,0,.2)}nav.navigation .nav-bar ul.menu li a{text-decoration:none;color:#fff}nav.navigation input{background-image:url(/assets/img/search.png);background-repeat:no-repeat;border-radius:15px;background-position:5px 4px;outline:none;width:30px;border:none;transition:width .7s ease-in-out;padding:2px 5px;font-size:15px;color:transparent}nav.navigation input:focus{width:250px;background-position:215px 4px;color:#000}nav.mobil{position:fixed;background:#1374b9;width:300px;height:100vh;display:none}nav.mobil li{list-style:none;padding:3px;cursor:pointer;transition:all .3s;font-family:Roboto,sans-serif}nav.mobil li:hover{background:rgba(0,0,0,.2)}nav.mobil li a{color:#fff;font-size:13px;text-decoration:none;font-weight:500}nav.mobil li ul{display:none}@media only screen and (max-width:480px){nav.navigation .nav-bar ul.menu li:nth-child(1n+2){display:none}}.main{font-family:Georgia,Times New Roman,Times,serif;padding-top:128px}.main .nav-news{display:-ms-flexbox;display:flex;padding:8px 1em;background:#999}.main .nav-news .is-news p{margin:0;font-family:Arial,Helvetica,sans-serif;color:#000;font-weight:900}.main .nav-news ul{display:-ms-flexbox;display:flex;margin:0}.main .nav-news ul li{margin-right:20px;list-style:none}.main .nav-news ul li a{font-size:14px;color:#000;text-decoration:none;font-weight:500}.main section{padding:0 1em}.main .primary{display:-ms-flexbox;display:flex;margin:1em 0}.main .primary .p-one{display:-ms-flexbox;display:flex;-ms-flex:1 0 80%;flex:1 0 80%;margin:10px 10px 10px 0}.main .primary .p-one .p-note{-ms-flex:1 0 50%;flex:1 0 50%}.main .primary .p-one .p-note h1{font-size:3em;line-height:1.2}.main .primary .p-one .p-image{-ms-flex:1 0 50%;flex:1 0 50%;margin:0 10px}.main .primary .p-one .p-image img{width:390px}.main .primary .p-two{margin:10px;-ms-flex:1 0 18%;flex:1 0 18%}.main .primary .p-two .note{margin-bottom:1em;border-bottom:1px dotted #000}.main .primary .p-two .note h3{margin-top:.3em;color:#000}.main .secondary{display:-ms-flexbox;display:flex}.main .secondary h3{font-size:1.5em;margin-bottom:1em;display:inline-block;color:#000;margin:0 0 .4em;border-top:.3em solid #008fea}.main .secondary .p-one{-ms-flex:1 0 50%;flex:1 0 50%;margin:0 10px 0 0}.main .secondary .p-one .news{display:-ms-flexbox;display:flex}.main .secondary .p-one .news .news-img{-ms-flex:1 0 30%;flex:1 0 30%;margin-right:10px}.main .secondary .p-one .news .news-img img{width:150px}.main .secondary .p-one .news .news-content{-ms-flex:1 0 65%;flex:1 0 65%;margin:0 0 30px 10px}.main .secondary .p-one .news .news-content h2{font-size:1.3em;font-weight:500;color:#000;margin:0;line-height:1.3}.main .secondary .p-two{-ms-flex:1 0 20%;flex:1 0 20%;margin:0 10px}.main .secondary .p-two .tending{margin-bottom:1em;padding-bottom:1em;border-bottom:1px dotted #000}.main .secondary .p-two .tending span.section{font-size:12px;color:#0678be}.main .secondary .p-two .tending h5{line-height:1.4;font-size:12px;color:#000;margin:0}.main .secondary .p-three{-ms-flex:1 0 25%;flex:1 0 25%;margin:0 0 0 10px;text-align:center}.main .secondary .p-three .pub{margin-bottom:30px}.main .secondary .p-three .pub img{width:250px}.main .third{margin:1em 0}.main .third h2{display:inline-block;color:#000;font-size:2em;margin:0 0 .3em;border-top:.3em solid #008fea}.main .third .section-four{display:-ms-flexbox;display:flex}.main .third .section-four .p-one{-ms-flex:1 0 20%;flex:1 0 20%;margin-right:20px}.main .third .section-four .p-one:last-child{margin-right:0}.main .third .section-four .p-one .news .news-img img{width:233px}.main .third .section-four .news-content h3{font-weight:400;line-height:1.3;margin:0;color:#000}.main .third .section-four .news-content h5{color:#000}.main .sections{display:-ms-flexbox;display:flex}.main .sections .sectionss{-ms-flex:1 0 79%;flex:1 0 79%;margin-right:10px}.main .sections .sectionss .videos{background:#008fea;padding:1em;margin:0 0 2em}.main .sections .sectionss .videos h2{color:#fff;border-top:.3em solid #fff}.main .sections .sectionss .videos .n-videos{display:-ms-flexbox;display:flex}.main .sections .sectionss .videos .n-videos .big-video{-ms-flex:1 0 75%;flex:1 0 75%;margin-right:1em}.main .sections .sectionss .videos .n-videos .big-video p{color:#fff;margin:0}.main .sections .sectionss .videos .n-videos .small-video{-ms-flex:1 0 26%;flex:1 0 26%}.main .sections .sectionss .videos .n-videos .small-video p{margin:0 0 1em;color:#fff}.main .sections .sectionss h2{display:inline-block;color:#000;font-size:2em;margin:0 0 .3em;border-top:.3em solid #008fea}.main .sections .sectionss .p-one{display:-ms-flexbox;display:flex}.main .sections .sectionss .p-one h3{font-weight:400;font-size:1.9em;color:#000;margin:0;line-height:1.3}.main .sections .sectionss .p-one .n-news{-ms-flex:1 0 45%;flex:1 0 45%;margin-left:10px}.main .sections .sectionss .p-one .n-image{-ms-flex:1 0 45%;flex:1 0 45%;margin-right:10px}.main .sections .sectionss .p-one .n-image img{width:380px}.main .sections .sectionss .o-news{display:-ms-flexbox;display:flex}.main .sections .sectionss .o-news .note{-ms-flex:1 0 32%;flex:1 0 32%;margin-right:10px;margin-bottom:2em}.main .sections .sectionss .o-news .note:last-child{margin-right:0}.main .sections .sectionss .o-news .note h4{color:#000;margin:.4em 0}.main .sections .entretenmient{-ms-flex:1 0 18%;flex:1 0 18%;margin-left:10px}.main .sections .entretenmient h4{display:inline-block;color:#000;font-size:1.4em;margin:0 0 .3em;border-top:.3em solid #008fea}.main .sections .entretenmient .e-news{margin-bottom:.5em;padding-bottom:.5em;border-bottom:1px dotted #000}.main .sections .entretenmient h3{font-family:Oswald,Haettenschweiler,Arial Narrow Bold,sans-serif;font-size:1.3em;font-weight:700;color:#000;line-height:1.3;margin:0}.main .sections .entretenmient h5{margin:0;color:#0678be}.main .sections .entretenmient p{font-family:Roboto,sans-serif;font-weight:500;font-size:12px;margin:10px 0 0;line-height:1.3}.main .sections .entretenmient .e-img{margin:.3em 0}.main .sections .entretenmient .e-img img{width:183px}.main .galeria{background:#008fea;padding:1em;margin:2em 0}.main .galeria h2{display:inline-block;color:#fff;font-size:2em;margin:0 0 .3em;border-top:.3em solid #fff}.main .galeria .galerias{display:-ms-flexbox;display:flex}.main .galeria .galerias .image{-ms-flex:1 0 23%;flex:1 0 23%;margin-right:1em}.main .galeria .galerias .image:last-child{margin-right:0}.main .galeria .galerias .image img{width:237px}.main .cartoons h2{display:inline-block;color:#000;font-size:2em;margin:0 0 .3em;border-top:.3em solid #008fea}.main .cartoons .d-cartoons{display:-ms-flexbox;display:flex}.main .cartoons .d-cartoons .cartton{-ms-flex:1 0 20%;flex:1 0 20%;margin-right:20px;border:1px solid #999}.main .cartoons .d-cartoons .cartton:last-child{margin-right:0}.main .cartoons .d-cartoons .cartton img{width:232px}@media only screen and (max-width:768px){.main .primary{-ms-flex-direction:column;flex-direction:column;display:block;padding-right:0}.main .primary .p-one .p-note{-ms-flex:1 0 47%;flex:1 0 47%}.main .primary .p-one .p-note h1{font-size:2.5em;line-height:1.2}.main .primary .p-one .p-image{-ms-flex:1 0 47%;flex:1 0 47%;margin-right:0}.main .primary .p-one .p-image img{width:365px}.main .primary .p-two{display:-ms-flexbox;display:flex;margin:0}.main .primary .p-two .note{-ms-flex:1 0 45%;flex:1 0 45%;margin-right:10px}.main .primary .p-two .note:last-child{margin-left:10px}.main .primary .p-two .note h3{font-size:1.5em;line-height:1.4}.main .secondary .p-one{-ms-flex:1 0 60%;flex:1 0 60%}.main .secondary .p-two{-ms-flex:1 0 20%;flex:1 0 20%;margin-right:0}.main .secondary .p-three{display:none}.main .third .section-four{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.main .third .section-four .p-one{-ms-flex:1 0 46%;flex:1 0 46%;margin-right:0}.main .third .section-four .p-one:nth-child(2),.main .third .section-four .p-one:nth-child(4){margin-left:20px}.main .third .section-four .p-one .news .news-img img{width:356px}.main .third .section-four .news-content h3{font-size:1.3em}.main .sections{display:block;-ms-flex-direction:column;flex-direction:column}.main .sections .sectionss{-ms-flex:1 0 95%;flex:1 0 95%;margin-right:0}.main .sections .sectionss .videos .n-videos{display:-ms-flexbox;display:flex}.main .sections .sectionss .videos .n-videos .big-video{-ms-flex:1 0 70%;flex:1 0 70%;margin-right:1em}.main .sections .sectionss .videos .n-videos .small-video{-ms-flex:1 0 20%;flex:1 0 20%;display:none}.main .sections .sectionss .p-one .n-image,.main .sections .sectionss .p-one .n-news{-ms-flex:1 0 48%;flex:1 0 48%}.main .sections .sectionss .p-one .n-image img{width:358px}.main .sections .entretenmient{margin:0}.main .sections .entretenmient .notes{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.main .sections .entretenmient .notes h4{font-size:2em}.main .sections .entretenmient .notes .e-news{-ms-flex:1 0 30%;flex:1 0 30%;margin-right:20px}.main .sections .entretenmient .notes .e-news:nth-child(3n+0){margin-right:0}.main .sections .entretenmient .notes .e-img img{width:232px}.main .galeria .galerias .image img{width:173px}.main .cartoons{padding:0 1em}.main .cartoons .d-cartoons{-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:0}.main .cartoons .d-cartoons .cartton{-ms-flex:1 0 40%;flex:1 0 40%;margin-right:20px;margin-bottom:20px}.main .cartoons .d-cartoons .cartton:nth-child(2n+0){margin-right:0}.main .cartoons .d-cartoons .cartton img{width:355px}}@media only screen and (max-width:480px){.main .nav-news{display:none}.main .primary .p-one{-ms-flex-direction:column;flex-direction:column}.main .primary .p-one .p-image{margin-left:0}.main .primary .p-one .p-image img{width:330px}.main .primary .p-two,.main .secondary{-ms-flex-direction:column;flex-direction:column}.main .secondary .p-one{margin-right:0}.main .secondary .p-one .news{display:-ms-flexbox;display:flex}.main .secondary .p-one .news .news-img{-ms-flex:1 0 46%;flex:1 0 46%}.main .secondary .p-one .news .news-img img{width:150px}.main .secondary .p-one .news .news-content{-ms-flex:1 0 48%;flex:1 0 48%}.main .secondary .p-one .news .news-content h2{font-size:1em;line-height:1.4}.main .secondary .p-two{margin:0}.main .secondary .p-two .tending h5{font-size:16px}.main .secondary .p-three{display:block;margin:0}.main .secondary .p-three .pub img{width:330px}.main .third .section-four{-ms-flex-direction:column;flex-direction:column}.main .third .section-four .p-one:nth-child(2n+0){margin-left:0}.main .third .section-four .p-one .news .news-img img{width:330px}.main .sections .sectionss{margin-right:0}.main .sections .sectionss,.main .sections .sectionss .videos .n-videos{-ms-flex-direction:column;flex-direction:column}.main .sections .sectionss .videos .n-videos .big-video{margin-right:0;display:none}.main .sections .sectionss .videos .n-videos .big-video p{color:#fff;margin:0}.main .sections .sectionss .videos .n-videos .small-video{display:block}.main .sections .sectionss .videos .n-videos .small-video p{margin:0 0 1em;color:#fff}.main .sections .sectionss .p-one{-ms-flex-direction:column;flex-direction:column}.main .sections .sectionss .p-one .n-news{margin-left:0}.main .sections .sectionss .p-one .n-image img{width:330px}.main .sections .sectionss .o-news{-ms-flex-direction:column;flex-direction:column}.main .sections .sectionss .o-news .note{margin-bottom:1em}.main .sections .sectionss .o-news .note h4{margin:0}.main .sections .entretenmient h4{font-size:2em}.main .sections .entretenmient .e-news{margin-right:0!important}.main .sections .entretenmient .e-news h3{font-family:Oswald,Haettenschweiler,Arial Narrow Bold,sans-serif;font-size:2em;font-weight:700;color:#000;line-height:1.3;margin:0}.main .sections .entretenmient .e-news h5{margin:0;color:#0678be}.main .sections .entretenmient .e-news p{font-size:14px;line-height:1.4}.main .sections .entretenmient .e-news .e-img img{width:330px}.main .galeria{display:none}.main .cartoons .d-cartoons{-ms-flex-direction:column;flex-direction:column}.main .cartoons .d-cartoons .cartton{margin-right:0}.main .cartoons .d-cartoons .cartton img{width:328px}}.footer{background:#008fea;margin-top:2em}.footer h2{color:#fff}.footer h2,.footer ul{margin:0;text-align:center}.footer ul{padding-bottom:1em}.footer .first{display:-ms-flexbox;display:flex;padding-top:2em}.footer .first .logo{-ms-flex:1 0 50%;flex:1 0 50%}.footer .first .logo img{width:400px}.footer .first .adress{-ms-flex:1 0 10%;flex:1 0 10%}.footer .first .adress p{font-family:sans-serif;margin:0;color:#fff}.footer ul.menu-footer{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;padding:0}.footer ul.menu-footer li{list-style:none;border-right:2px solid #fff;padding:0 2.2em}.footer ul.menu-footer li:last-child{border-right:none}.footer ul.menu-footer li a{font-family:sans-serif;text-decoration:none;color:#fff}.footer ul.menu-footer li a:hover{text-decoration:underline}.footer .right p{font-family:sans-serif;text-align:center;margin:0;color:#fff}.footer .copyright,.footer .wrapper{padding:20px;text-align:center}.footer hr{margin:30px 20px;border-top:2px solid #1c1e26;border-bottom:2px solid #38404d}.footer .list-unstyled{padding-left:0;list-style:none}.footer .list-inline li{display:inline-block;padding-right:5px;padding-left:5px;margin-bottom:10px}.footer .social-icons .fa{font-size:1.8em;width:50px;height:50px;line-height:50px;text-align:center;color:#fff;color:hsla(0,0%,100%,.8);transition:all .3s ease-in-out}.footer .social-icons.icon-circle .fa{border-radius:50%}.footer .social-icons.icon-rounded .fa{border-radius:5px}.footer .social-icons.icon-flat .fa{border-radius:0}.footer .social-icons .fa:active,.footer .social-icons .fa:hover{color:#fff;box-shadow:1px 1px 3px #333}.footer .social-icons.icon-zoom .fa:active,.footer .social-icons.icon-zoom .fa:hover{transform:scale(1.1)}.footer .social-icons.icon-rotate .fa:active,.footer .social-icons.icon-rotate .fa:hover{transform:scale(1.1) rotate(1turn)}.footer .social-icons .fa-adn{background-color:#504e54}.footer .social-icons .fa-apple{background-color:#aeb5c5}.footer .social-icons .fa-android{background-color:#a5c63b}.footer .social-icons .fa-bitbucket,.footer .social-icons .fa-bitbucket-square{background-color:#036}.footer .social-icons .fa-bitcoin,.footer .social-icons .fa-btc{background-color:#f7931a}.footer .social-icons .fa-css3{background-color:#1572b7}.footer .social-icons .fa-dribbble{background-color:#f46899}.footer .social-icons .fa-dropbox{background-color:#018bd3}.footer .social-icons .fa-facebook,.footer .social-icons .fa-facebook-square{background-color:#3c599f}.footer .social-icons .fa-flickr{background-color:#ff0084}.footer .social-icons .fa-foursquare{background-color:#0086be}.footer .social-icons .fa-github,.footer .social-icons .fa-github-alt,.footer .social-icons .fa-github-square{background-color:#070709}.footer .social-icons .fa-google-plus,.footer .social-icons .fa-google-plus-square{background-color:#cf3d2e}.footer .social-icons .fa-html5{background-color:#e54d26}.footer .social-icons .fa-instagram{background-color:#a1755c}.footer .social-icons .fa-linkedin,.footer .social-icons .fa-linkedin-square{background-color:#0085ae}.footer .social-icons .fa-linux{background-color:#fbc002;color:#333}.footer .social-icons .fa-maxcdn{background-color:#f6ae1c}.footer .social-icons .fa-pagelines{background-color:#241e20;color:#3984ea}.footer .social-icons .fa-pinterest,.footer .social-icons .fa-pinterest-square{background-color:#cc2127}.footer .social-icons .fa-renren{background-color:#025dac}.footer .social-icons .fa-skype{background-color:#01aef2}.footer .social-icons .fa-stack-exchange{background-color:#245590}.footer .social-icons .fa-stack-overflow{background-color:#ff7300}.footer .social-icons .fa-trello{background-color:#265a7f}.footer .social-icons .fa-tumblr,.footer .social-icons .fa-tumblr-square{background-color:#314e6c}.footer .social-icons .fa-twitter,.footer .social-icons .fa-twitter-square{background-color:#32ccfe}.footer .social-icons .fa-vimeo-square{background-color:#229acc}.footer .social-icons .fa-vk{background-color:#375474}.footer .social-icons .fa-weibo{background-color:#d72b2b}.footer .social-icons .fa-windows{background-color:#12b6f3}.footer .social-icons .fa-xing,.footer .social-icons .fa-xing-square{background-color:#00555c}.footer .social-icons .fa-youtube,.footer .social-icons .fa-youtube-play,.footer .social-icons .fa-youtube-square{background-color:#c52f30}@media only screen and (max-width:768px){footer ul.menu-footer{-ms-flex-direction:column;flex-direction:column}footer ul.menu-footer li{border-right:none!important}}@media only screen and (max-width:480px){footer .first{-ms-flex-direction:column;flex-direction:column}footer .first .logo img{width:354px!important}footer .first .adress{text-align:center;margin-top:1em}}.subscribe{-ms-flex-negative:7;flex-shrink:7}.subscribe button.orange{font-family:Oswald,sans-serif;margin-right:10px;background-color:#ff9800;font-weight:700;color:#fff;border:2px solid #ff9800;padding:5px;border-radius:5px;cursor:pointer;transition:all .25s ease}.subscribe button.orange:hover{background:#008fea;border:2px solid #008fea}.subscribe button.black{font-family:Oswald,sans-serif;font-weight:700;border:2px solid #ff9800;padding:5px;border-radius:5px;color:#ff9800;cursor:pointer;transition:all .25s ease}.subscribe button.black:hover{background:#008fea;border:2px solid #008fea;color:#fff}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media only screen and (max-width:768px){nav.navigation .bar{display:block}nav.navigation ul{display:none;position:static;background:#008fea}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
